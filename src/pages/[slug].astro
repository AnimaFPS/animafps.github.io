---
import BaseLayout from "../layouts/BaseLayout.astro";
import getPostData from "../utils/getPostData";
import type { MarkdownFrontmatter } from "../types";

export function getStaticPaths({ rss }) {
  let posts = Astro.fetchContent<MarkdownFrontmatter>("../posts/*.md");
  if (process.env["DRAFTS"]) {
    posts = posts.concat(
      Astro.fetchContent<MarkdownFrontmatter>("../drafts/*.md")
    );
  }
  const sortedPosts = posts.sort(
    (a, b) =>
      new Date(b.date).getMilliseconds() - new Date(a.date).getMilliseconds()
  );
  rss({
    title: "Anima's stuff",
    description:
      "A random 18y/o writing about gaming, philosophy, programming and mathematics.",
    customData: `<language>en-us</language>`,
    stylesheet: true,
    items: sortedPosts.map((item) => ({
      title: item.title,
      description: item.description,
      link: item.file.pathname.split("/").pop().split(".").shift(),
      pubDate: item.date,
    })),
  });
  return posts.map((p) => ({
    params: { slug: p.file.pathname.split("/").pop().split(".").shift() },
    props: { post: p },
  }));
}

const { Content, title, description, date } = Astro.props.post;
const { readingTime } = getPostData(Astro.props.post);
const publishDate = new Date(date).toLocaleString("en", {
  day: "numeric",
  month: "short",
  year: "numeric",
});
---

<BaseLayout {title} {description} current="posts" ogType="article">
  <main itemscope itemtype="https://schema.org/Article">
    <meta itemprop="description" content={description} />
    <header>
      <p>
        <time datetime={date} itemprop="datePublished">{publishDate}</time> ~ {readingTime}
      </p>
      <h1 itemprop="headline">{title}</h1>
      <hr class="mx-auto" />
    </header>
    <div class="max-w-3xl mx-auto">
      <article class="content" itemprop="articleBody">
        <Content />
      </article>
      <hr />
    </div>
  </main>
</BaseLayout>

<style>
  header {
    text-align: center;
  }

  header h1 {
    margin-bottom: 0.7em;
  }

  header p {
    color: var(--text-secondary);
    text-transform: uppercase;
    font-family: var(--font-family-sans);
    font-weight: 600;
  }

  header hr {
    min-width: 100px;
    width: 30%;
  }
</style>
